plugins {
	id "org.xtext.xtend" version "2.0.4"
}

xtext.version = "2.17.0"

repositories {
	mavenCentral()

	// for ATL
	maven { url "https://repo.eclipse.org/content/groups/releases/" }

	flatDir {
		dirs	'libs',				// for atol.jar
			// TODO: change the two following relative path dependencies into a project dependency?
			"../EMFSolutionAOF/libs",	// for aof.jar
			"../EMFSolutionAOF/build/libs"	// for EMFSolutionAOF.jar
	}
}

configurations {
	emftvm_compile
}

dependencies {
	compile name: 'aof'
	compile name: 'EMFSolutionAOF'
	compile 'org.eclipse.xtend:org.eclipse.xtend.lib:2.17.0'
	compile name: 'atol'

	// could be compileOnly for ATOL, but must be compile for ATL
	compile('org.eclipse.m2m.atl:org.eclipse.m2m.atl.emftvm.compiler:4.0.0-1') {
		exclude group: 'org.eclipse.m2m.atl', module: 'org.eclipse.m2m.atl.emfvm'	// ignore incorrect dependency in eclipse repository
	}

	emftvm_compile('org.eclipse.m2m.atl:org.eclipse.m2m.atl.emftvm.ant.standalone:4.0.0-1')
}

apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'application'

apply plugin: 'java-library-distribution'


xtend {
	sourceSets {
		main.xtendOutputDir = 'xtend-gen'
	}
}

mainClassName = 'ttc2018.LiveContestDriver'

sourceSets {
	main {
		java {
			srcDirs = ['src', 'src-gen']
		}
		resources {
			srcDirs = ['src']
		}
	}
}

sourceSets {
	main {
		output.resourcesDir = "build/classes/main"
	}
	test {
		output.resourcesDir = "build/classes/test"
	}
}

def compileATL(outputDir, module) {
	ant.emftvm_compile(module: module, modulepath: 'src/ttc2018/', outputpath: "${outputDir}", charset: 'UTF-8')
}


task compileATL {
	String outputDir = "${sourceSets.main.output.resourcesDir}/ttc2018/"
	inputs.files('src/ttc2018/Q1.atl', 'src/ttc2018/Q2.atl')
	outputs.files("${outputDir}/Q1.emftvm", "${outputDir}/Q2.emftvm")
	doLast {
		ant.taskdef(name: 'emftvm_compile',
			classname: 'org.eclipse.m2m.atl.emftvm.ant.CompileTask',
			classpath: configurations.emftvm_compile.asPath)
		compileATL(outputDir, 'Q1')
		compileATL(outputDir, 'Q2')
	}
}

processResources.dependsOn(compileATL)

