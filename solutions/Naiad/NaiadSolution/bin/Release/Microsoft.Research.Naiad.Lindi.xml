<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Research.Naiad.Lindi</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Research.Naiad.Frameworks.Lindi.NamespaceDoc">
            <summary>
            The Lindi framework contains extension methods that add LINQ-style operators for streams.
            </summary>
            <remarks>
            The Lindi operators process the data in each logical <see cref="T:Microsoft.Research.Naiad.Time`1"/> independently. To perform
            computations that are incremental across epochs and iterations, use the <see cref="N:Microsoft.Research.Naiad.Frameworks.DifferentialDataflow"/>
            framework instead.
            </remarks>
        </member>
        <member name="T:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods">
            <summary>
            The Lindi operators are implemented as extension methods on Naiad <see cref="T:Microsoft.Research.Naiad.Stream`2"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.Select``3(Microsoft.Research.Naiad.Stream{``0,``2},System.Func{``0,``1})">
            <summary>
            Transforms each record in the input <paramref name="stream"/> using the given <paramref name="selector"/> function.
            </summary>
            <typeparam name="TInput">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <typeparam name="TOutput">The type of the transformed records.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="selector">A transform function to apply to each record.</param>
            <returns>The stream of transformed records.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.Where``2(Microsoft.Research.Naiad.Stream{``0,``1},System.Func{``0,System.Boolean})">
            <summary>
            Filters the input <paramref name="stream"/> to contain only record that match the given <paramref name="predicate"/>.
            </summary>
            <typeparam name="TRecord">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="predicate">A function that returns <c>true</c> if and only if the record will be kept in the output.</param>
            <returns>The stream of records that satisfy the predicate.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.SelectMany``3(Microsoft.Research.Naiad.Stream{``0,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
            <summary>
            Transforms each record in the collection using the given <paramref name="selector"/> function and flattens the result. 
            </summary>
            <typeparam name="TInput">The type of the input records.</typeparam>
            <typeparam name="TOutput">The type of elements of the sequence returned by <paramref name="selector"/>.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="selector">A transform function to apply to each record.</param>
            <returns>The flattened stream of transformed records.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.Concat``2(Microsoft.Research.Naiad.Stream{``0,``1},Microsoft.Research.Naiad.Stream{``0,``1})">
            <summary>
            Computes the concatention of <paramref name="stream1"/> and <paramref name="stream2"/>.
            </summary>
            <typeparam name="TRecord">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream1">The first input stream.</param>
            <param name="stream2">The second input stream.</param>
            <returns>The unordered concatenation of the two input streams.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.GroupBy``4(Microsoft.Research.Naiad.Stream{``0,``3},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``2}})">
            <summary>
            Groups records using the supplied key selector, and applies the given reduction function.
            </summary>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TInput">The type of the input records.</typeparam>
            <typeparam name="TOutput">The result type.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="keySelector">Function that extracts a key from each record.</param>
            <param name="reducer">Function that transforms a key and sequence of input records to a sequence of output records.</param>
            <returns>The stream of output records for each group in <paramref name="stream"/>.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.CoGroupBy``5(Microsoft.Research.Naiad.Stream{``0,``4},Microsoft.Research.Naiad.Stream{``1,``4},System.Func{``0,``2},System.Func{``1,``2},System.Func{``2,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Collections.Generic.IEnumerable{``3}})">
            <summary>
            Groups records from both input streams using the respective key selector, and applies the given reduction function.
            </summary>
            <typeparam name="TInput1">The type of records in <paramref name="stream1"/>.</typeparam>
            <typeparam name="TInput2">The type of records in <paramref name="stream2"/>.</typeparam>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TOutput">The result type.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream1">The first input stream.</param>
            <param name="stream2">The second input stream.</param>
            <param name="keySelector1">The key selector applied to records in <paramref name="stream1"/>.</param>
            <param name="keySelector2">The key selector applied to records in <paramref name="stream2"/>.</param>
            <param name="reducer">Function that transforms a key and two sequences of records from each input stream to a sequence of output records.</param>
            <returns>The stream of output records for each group in either input stream.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.Join``5(Microsoft.Research.Naiad.Stream{``0,``4},Microsoft.Research.Naiad.Stream{``1,``4},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
            <summary>
            Joins the records in <paramref name="stream1"/> with the records in <paramref name="stream2"/>, using the respective key selectors.
            </summary>
            <typeparam name="TInput1">The type of records in <paramref name="stream1"/>.</typeparam>
            <typeparam name="TInput2">The type of records in <paramref name="stream2"/>.</typeparam>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TOutput">The result type.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream1">The first input stream.</param>
            <param name="stream2">The second input stream.</param>
            <param name="keySelector1">The key selector applied to records in <paramref name="stream1"/>.</param>
            <param name="keySelector2">The key selector applied to records in <paramref name="stream2"/>.</param>
            <param name="resultSelector">Function that transforms records with matching keys to an output record.</param>
            <returns>The stream of output records.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.Distinct``2(Microsoft.Research.Naiad.Stream{``0,``1})">
            <summary>
            Computes the set of distinct records in <paramref name="stream"/>.
            </summary>
            <typeparam name="TRecord">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream">The input stream.</param>
            <returns>The stream containing at most one instance of each distinct record in the input stream.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.Union``2(Microsoft.Research.Naiad.Stream{``0,``1},Microsoft.Research.Naiad.Stream{``0,``1})">
            <summary>
            Computes the set union of records in <paramref name="stream1"/> and <paramref name="stream2"/>.
            </summary>
            <typeparam name="TRecord">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream1">The first input stream.</param>
            <param name="stream2">The second input stream.</param>
            <returns>The stream containing at most one instance of each record in either input stream.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.Intersect``2(Microsoft.Research.Naiad.Stream{``0,``1},Microsoft.Research.Naiad.Stream{``0,``1})">
            <summary>
            Computes the set intersection of records in <paramref name="stream1"/> and <paramref name="stream2"/>.
            </summary>
            <typeparam name="TRecord">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream1">The first input stream.</param>
            <param name="stream2">The second input stream.</param>
            <returns>The stream containing at most one instance of each record in both input stream.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.Except``2(Microsoft.Research.Naiad.Stream{``0,``1},Microsoft.Research.Naiad.Stream{``0,``1})">
            <summary>
            Computes the difference of records in <paramref name="stream1"/> but not in <paramref name="stream2"/>.
            </summary>
            <typeparam name="TRecord">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream1">The first input stream.</param>
            <param name="stream2">The second input stream.</param>
            <returns>The stream containing the records in <paramref name="stream1"/> that do not match any record in <paramref name="stream2"/>.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.Count``2(Microsoft.Research.Naiad.Stream{``0,``1})">
            <summary>
            Counts the number of occurrences of each record in <paramref name="stream"/>.
            </summary>
            <typeparam name="TRecord">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream">The input stream.</param> 
            <returns>The stream containing pairs of a record and its respective count for each input record.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.Min``4(Microsoft.Research.Naiad.Stream{``0,``3},System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            Groups records using the supplied key selector, and computes the minimum value in each group.
            </summary>
            <typeparam name="TInput">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TValue">The type of values to be used for comparison.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="keySelector">Function that extracts a key from each record.</param>
            <param name="valueSelector">Function that extracts from each record the value to be used in the comparison.</param>
            <returns>The stream of one key-value pair for each key and the respective minimum value in the input stream.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.Max``4(Microsoft.Research.Naiad.Stream{``0,``3},System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            Groups records using the supplied key selector, and computes the maximum value in each group.
            </summary>
            <typeparam name="TInput">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TValue">The type of values to be used for comparison.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="keySelector">Function that extracts a key from each record.</param>
            <param name="valueSelector">Function that extracts from each record the value to be used in the comparison.</param>
            <returns>The stream of one key-value pair for each key and the respective maximum value in the input stream.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.Aggregate``5(Microsoft.Research.Naiad.Stream{``0,``4},System.Func{``0,``1},System.Func{``0,``2},System.Func{``2,``2,``2},System.Func{``1,``2,``3})">
            <summary>
            Groups records using the supplied key selector, and applies the given aggregation function.
            </summary>
            <typeparam name="TInput">The type of the input records.</typeparam>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TState">The intermediate state type.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <typeparam name="TOutput">The type of the output records.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="keySelector">Function that extracts a key from each record.</param>
            <param name="stateSelector">Function that extracts from each record the state to be aggregated.</param>
            <param name="combiner">A function from current state and incoming update, to the new state.</param>
            <param name="resultSelector">Function that transforms a key and final combined state to an output record.</param>
            <returns>The stream of output records.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.Aggregate``5(Microsoft.Research.Naiad.Stream{``0,``4},System.Func{``0,``1},System.Func{``0,``2},System.Func{``2,``2,``2},System.Func{``1,``2,``3},System.Boolean)">
            <summary>
            Groups records using the supplied key selector, and applies the given aggregation function.
            </summary>
            <typeparam name="TInput">The type of the input records.</typeparam>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TState">The intermediate state type.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <typeparam name="TOutput">The type of the output records.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="keySelector">Function that extracts a key from each record.</param>
            <param name="stateSelector">Function that extracts from each record the state to be aggregated.</param>
            <param name="combiner">A function from current state and incoming update, to the new state.</param>
            <param name="resultSelector">Function that transforms a key and final combined state to an output record.</param>
            <param name="locallyCombine">If <c>true</c>, perform local aggregation on each worker before global aggregation.</param>
            <returns>The stream of output records.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.Aggregate``3(Microsoft.Research.Naiad.Stream{Microsoft.Research.Naiad.Pair{``0,``1},``2},System.Func{``1,``1,``1})">
            <summary>
            Groups records using the supplied key selector, and applies the given aggregation function.
            </summary>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TState">The intermediate state type.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="combiner">A function from current state and incoming update, to the new state.</param>
            <returns>The stream of one key-value pair for each key and the respective final combined state in the input stream.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.Aggregate``3(Microsoft.Research.Naiad.Stream{Microsoft.Research.Naiad.Pair{``0,``1},``2},System.Func{``1,``1,``1},System.Boolean)">
            <summary>
            Groups records using the supplied key selector, and applies the given aggregation function.
            </summary>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TState">The intermediate state type.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="combiner">A function from current state and incoming update, to the new state.</param>
            <param name="locallyCombine">If <c>true</c>, perform local aggregation on each worker before global aggregation.</param>
            <returns>The stream of one key-value pair for each key and the respective final combined state in the input stream.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.CoGroupByVertex`7.OnNotify(`6)">
            <summary>
            Sends, at the given time, the results of the result selector for each key
            seen on the left and/or right inputs, and the corresponding (possibly empty)
            aggregates.
            </summary>
            <param name="time">The notification time.</param>
        </member>
        <member name="T:Microsoft.Research.Naiad.Frameworks.Lindi.NonStandardExtensionMethods">
            <summary>
            Less standard LINQ-ish methods exposing loops and parallelism.
            </summary>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.NonStandardExtensionMethods.SelectByVertex``3(Microsoft.Research.Naiad.Stream{``0,``2},System.Func{System.Int32,``0,``1})">
            <summary>
            Transforms each record in the input <paramref name="stream"/> using the given <paramref name="selector"/> function.
            </summary>
            <typeparam name="TInput">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <typeparam name="TOutput">The type of the transformed records.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="selector">Function that transforms a vertex ID and record to an output record.</param>
            <returns>The stream of transformed records.</returns>
            <remarks>
            This overload supports the inclusion of location information in the result, which can be used to optimized
            data transfer.
            </remarks>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.NonStandardExtensionMethods.SelectManyArraySegment``3(Microsoft.Research.Naiad.Stream{``0,``2},System.Func{``0,System.Collections.Generic.IEnumerable{System.ArraySegment{``1}}})">
            <summary>
            Transforms each record in the collection using the given <paramref name="selector"/> function and flattens the result.
            </summary>
            <typeparam name="TInput">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <typeparam name="TOutput">The type of elements of the array segments in the sequence returned by <paramref name="selector"/>.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="selector">A transform function to apply to each record.</param>
            <returns>The flattened stream of transformed records.</returns>
            <remarks>
            This overload supports optimizing the performance of <see cref="M:Microsoft.Research.Naiad.Frameworks.Lindi.ExtensionMethods.SelectMany``3(Microsoft.Research.Naiad.Stream{``0,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})"/> by using
            <see cref="T:System.ArraySegment`1"/> objects to batch the elements returned by <paramref name="selector"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.NonStandardExtensionMethods.Synchronize``2(Microsoft.Research.Naiad.Stream{``0,``1},System.Func{``1,System.Boolean})">
            <summary>
            For each timestamp, buffers the given <paramref name="stream"/> until all workers have all input for that time, and then releases the buffer.
            </summary>
            <typeparam name="TRecord">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="predicate">A predicate indicating which times to synchronize in</param>
            <returns>The input stream.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.NonStandardExtensionMethods.Iterate``2(Microsoft.Research.Naiad.Stream{``0,``1},System.Func{Microsoft.Research.Naiad.Dataflow.Iteration.LoopContext{``1},Microsoft.Research.Naiad.Stream{``0,Microsoft.Research.Naiad.Dataflow.IterationIn{``1}},Microsoft.Research.Naiad.Stream{``0,Microsoft.Research.Naiad.Dataflow.IterationIn{``1}}},System.Int32,System.String)">
            <summary>
            Iteratively applies <paramref name="function"/> to the given <paramref name="stream"/>.
            </summary>
            <typeparam name="TRecord">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="function">The Naiad computation to apply iteratively.</param>
            <param name="iterations">The number of iterations to perform.</param>
            <param name="name">Descriptive name for the loop.</param>
            <returns>The stream corresponding to applying <paramref name="function"/> to the input <paramref name="iterations"/> times.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.NonStandardExtensionMethods.Iterate``2(Microsoft.Research.Naiad.Stream{``0,``1},System.Func{Microsoft.Research.Naiad.Dataflow.Iteration.LoopContext{``1},Microsoft.Research.Naiad.Stream{``0,Microsoft.Research.Naiad.Dataflow.IterationIn{``1}},Microsoft.Research.Naiad.Stream{``0,Microsoft.Research.Naiad.Dataflow.IterationIn{``1}}},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Int32,System.String)">
            <summary>
            Iteratively applies <paramref name="function"/> to the given <paramref name="stream"/>.
            </summary>
            <typeparam name="TRecord">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="function">The Naiad computation to apply iteratively.</param>
            <param name="partitionedBy">Partitioning function for the input stream.</param>
            <param name="iterations">The number of iterations to perform.</param>
            <param name="name">Descriptive name for the loop.</param>
            <returns>The stream corresponding to applying <paramref name="function"/> to the input <paramref name="iterations"/> times.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.NonStandardExtensionMethods.Iterate``2(Microsoft.Research.Naiad.Stream{``0,``1},System.Func{Microsoft.Research.Naiad.Dataflow.Iteration.LoopContext{``1},Microsoft.Research.Naiad.Stream{``0,Microsoft.Research.Naiad.Dataflow.IterationIn{``1}},Microsoft.Research.Naiad.Stream{``0,Microsoft.Research.Naiad.Dataflow.IterationIn{``1}}},System.Func{``0,System.Int32},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Int32,System.String)">
            <summary>
            Iteratively applies <paramref name="function"/> to the given <paramref name="stream"/>.
            </summary>
            <typeparam name="TRecord">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="function">The Naiad computation to apply iteratively.</param>
            <param name="partitionedBy">Partitioning function for the input stream.</param>
            <param name="iterationSelector">Function that maps an input record to the iteration at which that record should be introduced.</param>
            <param name="iterations">The number of iterations to perform.</param>
            <param name="name">Descriptive name for the loop.</param>
            <returns>The stream corresponding to applying <paramref name="function"/> to the input <paramref name="iterations"/> times.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.NonStandardExtensionMethods.IterateAndAccumulate``2(Microsoft.Research.Naiad.Stream{``0,``1},System.Func{Microsoft.Research.Naiad.Dataflow.Iteration.LoopContext{``1},Microsoft.Research.Naiad.Stream{``0,Microsoft.Research.Naiad.Dataflow.IterationIn{``1}},Microsoft.Research.Naiad.Stream{``0,Microsoft.Research.Naiad.Dataflow.IterationIn{``1}}},System.Int32,System.String)">
            <summary>
            Iteratively applies <paramref name="function"/> to the given <paramref name="stream"/> and accumulates all of the iterates.
            </summary>
            <typeparam name="TRecord">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="function">The Naiad computation to apply iteratively.</param>
            <param name="iterations">The number of iterations to perform.</param>
            <param name="name">Descriptive name for the loop.</param>
            <returns>The stream corresponding to applying <paramref name="function"/> to the input <paramref name="iterations"/> times and accumulating the iterates.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.NonStandardExtensionMethods.IterateAndAccumulate``2(Microsoft.Research.Naiad.Stream{``0,``1},System.Func{Microsoft.Research.Naiad.Dataflow.Iteration.LoopContext{``1},Microsoft.Research.Naiad.Stream{``0,Microsoft.Research.Naiad.Dataflow.IterationIn{``1}},Microsoft.Research.Naiad.Stream{``0,Microsoft.Research.Naiad.Dataflow.IterationIn{``1}}},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Int32,System.String)">
            <summary>
            Iteratively applies <paramref name="function"/> to the given <paramref name="stream"/> and accumulates all of the iterates.
            </summary>
            <typeparam name="TRecord">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="function">The Naiad computation to apply iteratively.</param>
            <param name="partitionedBy">Partitioning function for the input stream.</param>
            <param name="iterations">The number of iterations to perform.</param>
            <param name="name">Descriptive name for the loop.</param>
            <returns>The stream corresponding to applying <paramref name="function"/> to the input <paramref name="iterations"/> times and accumulating the iterates.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.NonStandardExtensionMethods.IterateAndAccumulate``2(Microsoft.Research.Naiad.Stream{``0,``1},System.Func{Microsoft.Research.Naiad.Dataflow.Iteration.LoopContext{``1},Microsoft.Research.Naiad.Stream{``0,Microsoft.Research.Naiad.Dataflow.IterationIn{``1}},Microsoft.Research.Naiad.Stream{``0,Microsoft.Research.Naiad.Dataflow.IterationIn{``1}}},System.Func{``0,System.Int32},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Int32,System.String)">
            <summary>
            Iteratively applies <paramref name="function"/> to the given <paramref name="stream"/> and accumulates all of the iterates.
            </summary>
            <typeparam name="TRecord">The type of the input records.</typeparam>
            <typeparam name="TTime">The type of timestamp on each record.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="function">The Naiad computation to apply iteratively.</param>
            <param name="partitionedBy">Partitioning function for the input stream.</param>
            <param name="iterationSelector">Function that maps an input record to the iteration at which that record should be introduced.</param>
            <param name="iterations">The number of iterations to perform.</param>
            <param name="name">Descriptive name for the loop.</param>
            <returns>The stream corresponding to applying <paramref name="function"/> to the input <paramref name="iterations"/> times and accumulating the iterates.</returns>
        </member>
        <member name="M:Microsoft.Research.Naiad.Frameworks.Lindi.NonStandardExtensionMethods.WriteToFiles``1(Microsoft.Research.Naiad.Stream{``0,Microsoft.Research.Naiad.Dataflow.Epoch},System.String,System.Action{``0,System.IO.BinaryWriter})">
            <summary>
            Writes the records in the given <paramref name="stream"/> to files.
            </summary>
            <typeparam name="TInput">The type of the input records.</typeparam>
            <param name="stream">The input stream.</param>
            <param name="format">Format string for filename, where {0} is replaced with the vertex ID.</param>
            <param name="action">Action to apply on each record and the corresponding <see cref="T:System.IO.BinaryWriter"/>.</param>
            <remarks>
            The <paramref name="action"/> parameter is used to write each record to its respective file. Often the action is 
            similar to <c>(record, writer) =&gt; writer.Write(record)</c>.
            </remarks>
        </member>
    </members>
</doc>
